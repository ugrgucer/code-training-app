#import SortingOperator from './generalUse.graphql'
#import Language from './enums.graphql'
#import Date, DateTime from './scalars.graphql'

type Document {
    id: Int
    title: String
    document: String
    language: Language
    educatorId: Int
    sectionId: Int
    createdAt: DateTime
    updatedAt: DateTime
    codes: [Code]
    documentUser: DocumentUser
}

type DocumentUser {
    isCompleted: Boolean
    code: String
    output: String
}

input DocumentUserInput {
    code: String
    output: String
}

input DocumentCreateInput {
    document: String!
    title: String!
    language: Language!
    codes: [CodeInput]
}

input DocumentUpdateInput {
    document: String
    title: String
    language: Language
    codes: [CodeInput]
}

type DocumentDeletePayload {
    document_id: Int
}

input DocumentSorting {
    field: DocumentSortingField!
    type: SortingOperator!
}

enum DocumentSortingField {
    title
    createdAt
    updatedAt
}

type Query {
    documentRead(id: Int!): Document
    documentList(sectionId: Int!, sorting: DocumentSorting, paging: Paging): [Document]
}

type Mutation {
    documentCreate(sectionId: Int!, document: DocumentCreateInput!): Document
    documentUpdate(id: Int!, documentObj: DocumentUpdateInput!): [Document]
    documentDelete(id: Int!): DocumentDeletePayload
    setDocumentUser(documentId: Int!, documentUser: DocumentUserInput): DocumentUser
}