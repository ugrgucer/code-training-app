#import SortingOperator, StringOperator, NumericFloatOperator, BooleanOperator from './generalUse.graphql'
#import Image, ImageInput from  './image.graphql'
#import Date, DateTime from './scalars.graphql'

type Query {
    courseList(filter: CourseFilterBase, sorting: CourseSorting, paging: Paging): CourseList
    courseRead (seoLink: String!): Course
}

type Mutation {
    courseCreate(course: CourseCreateInput!): Course
    courseUpdate(id: Int!, course: CourseUpdateInput): Course
    courseDelete(id: Int!): CourseDeletePayload
}

type Course {
    id: Int
    title: String
    description: String
    seoLink: String
    isPublished: Boolean
    image: Image
    educatorId: Int
    educator: Educator
    courseSections: [CourseSection]
    createdAt: DateTime
    updatedAt: DateTime
}

type CourseList {
    courses: [Course]
    totalCount: Int
}

input CourseCreateInput {
    title: String!
    description: String!
    seoLink: String!
    isPublished: Boolean
    image: ImageInput
}

input CourseUpdateInput {
    title: String
    description: String
    seoLink: String
    isPublished: Boolean
    image: ImageInput
}

type CourseDeletePayload {
    course_id: Int
}

input CourseFilterBase {
    and: [CourseFilter]
    or: [CourseFilter]
}

input CourseFilter{
    title: StringOperator
    description: StringOperator
    isPublished: BooleanOperator
    educatorId: NumericFloatOperator
    or: [CourseFilter]
    and: [CourseFilter]
}

input CourseSorting {
    field: CourseSortingField!
    type: SortingOperator!
}

enum CourseSortingField{
    title
    description
    seoLink
    createdAt
    updatedAt
}